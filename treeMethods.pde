void tree1(int x, int y) {
  fill(112, 73, 36);
  rect(x, y, 10, 10);
  if (x+790<2400 || y/10>=0) {
    map[((x+790-(x+790)%10))/10][y/10]=-9418460;
  }
  rect(x, y-10, 10, 10);
  if (x+790<2400 || (y-10)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-10)/10]=-9418460;
  }
  rect(x, y-20, 10, 10);
  if (x+790<2400 || (y-20)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-20)/10]=-9418460;
  }
  rect(x, y-30, 10, 10);
  if (x+790<2400 || (y-30)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-30)/10]=-9418460;
  }

  fill(46, 120, 68);
  rect(x, y-40, 10, 10);
  if (x+790<2400 || (y-40)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-40)/10]=-100;/////////
  }

  rect(x+10, y-40, 10, 10);
  if (x+800<2400 || (y-40)/10>=0) {
    map[((x+800-(x+800)%10))/10][(y-40)/10]=-13731772;
  }
  rect(x-10, y-40, 10, 10);
  if (x+780<2400 || (y-40)/10>=0) {
    map[((x+780-(x+780)%10))/10][(y-40)/10]=-13731772;
  }
  rect(x, y-50, 10, 10);
  if (x+790<2400 || (y-50)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-50)/10]=-100;///////////
  }
  rect(x, y-60, 10, 10);
  if (x+790<2400 || (y-60)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-60)/10]=-13731772;
  }
  rect(x-10, y-50, 10, 10);
  if (x+780<2400 || (y-50)/10>=0) {
    map[((x+780-(x+780)%10))/10][(y-50)/10]=-13731772;
  }
  rect(x+10, y-50, 10, 10);
  if (x+800<2400 || (y-50)/10>=0) {
    map[((x+800-(x+800)%10))/10][(y-50)/10]=-13731772;
  }
  fill(255);
}

void tree2(int x, int y) {
  fill(112, 73, 36);
  rect(x, y, 10, 10);
  if (x+790<2400 || y/10>=0) {
    map[((x+790-(x+790)%10))/10][y/10]=-9418460;
  }
  rect(x, y-10, 10, 10);
  if (x+790<2400 || (y-10)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-10)/10]=-9418460;
  }

  fill(46, 120, 68);
  rect(x, y-20, 10, 10);
  if (x+790<2400 || (y-20)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-20)/10]=-100;
  }
  rect(x, y-30, 10, 10);
  if (x+790<2400 || (y-30)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-30)/10]=-100;
  }
  rect(x+10, y-20, 10, 10);
  if (x+800<2400 || (y-20)/10>=0) {
    map[((x+800-(x+800)%10))/10][(y-20)/10]=-13731772;
  }
  rect(x-10, y-20, 10, 10);
  if (x+780<2400 || (y-20)/10>=0) {
    map[((x+780-(x+800)%10))/10][(y-20)/10]=-13731772;
  }
  rect(x-10, y-30, 10, 10);
  if (x+780<2400 || (y-30)/10>=0) {
    map[((x+780-(x+780)%10))/10][(y-30)/10]=-13731772;
  }
  rect(x+10, y-30, 10, 10);
  if (x+800<2400 || (y-30)/10>=0) {
    map[((x+800-(x+800)%10))/10][(y-30)/10]=-13731772;
  }
  rect(x, y-40, 10, 10);
  if (x+790<2400 || (y-40)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-40)/10]=-13731772;
  }
  fill(255);
}

void tree3(int x, int y) {
  fill(112, 73, 36);
  rect(x, y, 10, 10);
  if (x+790<2400 || y/10>=0) {
    map[((x+790-(x+790)%10))/10][y/10]=-9418460;
  }
  fill(46, 120, 68);
  rect(x, y-10, 10, 10);
  if (x+790<2400 || (y-10)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-10)/10]=-100;
  }
  rect(x, y-20, 10, 10);
  if (x+790<2400 || (y-20)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-20)/10]=-100;
  }
  rect(x+10, y-10, 10, 10);
  if (x+800<2400 || (y-10)/10>=0) {
    map[((x+800-(x+800)%10))/10][(y-10)/10]=-13731772;
  }
  rect(x-10, y-10, 10, 10);
  if (x+780<2400 || (y-10)/10>=0) {
    map[((x+780-(x+780)%10))/10][(y-10)/10]=-13731772;
  }
  rect(x-10, y-20, 10, 10);
  if (x+780<2400 || (y-20)/10>=0) {
    map[((x+780-(x+790)%10))/10][(y-20)/10]=-13731772;
  }
  rect(x+10, y-20, 10, 10);
  if (x+800<2400 || (y-20)/10>=0) {
    map[((x+800-(x+790)%10))/10][(y-20)/10]=-13731772;
  }
  rect(x, y-30, 10, 10);
  if (x+790<2400 || (y-30)/10>=0) {
    map[((x+790-(x+790)%10))/10][(y-30)/10]=-13731772;
  }
  fill(255);
}
